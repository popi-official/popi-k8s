apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
  namespace: {{ .Release.Namespace }}
data:
  application-dev.yml: |
    spring:
      cloud:
        kubernetes:
          discovery:
            namespaces:
              - popi-manager
              - popi-user
      datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${DB_NAME}?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
        username: ${DB_USERNAME:root}
        password: ${DB_PASSWORD:root}
      jpa:
        properties:
          hibernate:
            ddl-auto: validate
            show_sql: true
        open-in-view: false
      flyway:
        enabled: true
        baseline-on-migrate: true
        locations: classpath:db/migration
      data:
        redis:
          host: ${REDIS_HOST}
          port: ${REDIS_PORT}
          password: ${REDIS_PASSWORD:}
        user-redis:
          host: ${USER_REDIS_HOST}
          port: ${USER_REDIS_PORT}
          database: ${USER_REDIS_DATABASE}
      kafka:
        bootstrap-servers: 43.203.8.14:29092
      batch:
        job:
          enabled: false
        jdbc:
          initialize-schema: always

    eureka:
      client:
        enabled: false

    jwt:
      access-token-secret: ${JWT_ACCESS_TOKEN_SECRET}
      refresh-token-secret: ${JWT_REFRESH_TOKEN_SECRET}
      access-token-expiration-time: ${JWT_ACCESS_TOKEN_EXPIRATION_TIME:3600}
      refresh-token-expiration-time: ${JWT_REFRESH_TOKEN_EXPIRATION_TIME:604800}
      issuer: ${JWT_ISSUER}

    cloud:
      aws:
        region: ${AWS_REGION:ap-northeast-2}
        accessKey: ${AWS_ACCESS_KEY}
        secretKey: ${AWS_SECRET_KEY}

        s3:
          bucket: ${S3_BUCKET}
          endpoint: ${S3_ENDPOINT:https://s3.ap-northeast-2.amazonaws.com}

        dynamodb:
          table-name: ${DYNAMODB_TABLE_NAME:popup_event}

    management:
      endpoints:
        jmx:
          exposure:
            exclude: "*"
        web:
          exposure:
            include: health
          base-path: /manager-actuator
        access:
          default: none
      endpoint:
        health:
          access: unrestricted

    spring-doc:
      default-consumes-media-type: application/json
      default-produces-media-type: application/json
      swagger-ui:
        tags-sorter: alpha
        operations-sorter: method
        disable-swagger-default-url: true
        path: /swagger-ui
        doc-expansion: none

    logging:
      level:
        org.hibernate.SQL: debug
        
    reservation:
      service:
        name: reservation-service-svc